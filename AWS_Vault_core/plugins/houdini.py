"""
WARNING: code generated by the awsv plugin manager, this code
         should not be edited manually.
"""

def import_bgeo(**kwargs):

    import os
    import hou
    path = kwargs["path"]
    root, f = os.path.split(path)
    f = f.split('.')[0]
    # test
    container = hou.node("/obj").createNode("geo", f)
    file_node = container.node("file1")
    file_node.setName(f + "_import")
    file_node.parm("file").set(path)
        
def preview_bgeo(**kwargs):

    import subprocess
    path = kwargs["path"]
    subprocess.Popen(["gplay", path])
    print kwargs
    
    
def reload_geo(**kwargs):
    
    import hou
    path = kwargs["path"]
    files = hou.sopNodeTypeCategory().nodeType("file")
    for f in files.instances():
        parm = f.parm("file")
        if parm.eval() == path:
            f.parm("reload").pressButton()


def test(**kwargs):

    # Write your method code here
    # A 'kwargs' dict is available with these entries:
    # kwargs["path"] => local file path
    # kwargs["cloud_path"] => file path on the cloud
    # kwargs["local_root"] => the current project's root folder
    import hou
    file_path = kwargs["path"]
    print kwargs
    


def open_hipfile(**kwargs):

    # Write your method code here
    # A 'kwargs' dict is available with these entries:
    # kwargs["path"] => local file path
    # kwargs["cloud_path"] => file path on the cloud
    # kwargs["local_root"] => the current project's root folder
    import hou
    file_path = kwargs["path"]
    hou.hipFile.load(file_path)
    
